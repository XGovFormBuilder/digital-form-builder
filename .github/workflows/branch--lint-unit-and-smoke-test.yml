name: Branch QA
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "**/README.md"
  workflow_dispatch:
jobs:
  #  lint-and-test:
  #    runs-on: ubuntu-latest
  #    strategy:
  #      matrix:
  #        app: [designer, runner, model]
  #    name: lint-and-test-${{matrix.app}}
  #    steps:
  #      - name: Login to GitHub Container Registry
  #        uses: docker/login-action@v2
  #        with:
  #          registry: ghcr.io
  #          username: ${{ github.repository_owner }}
  #          password: ${{ secrets.GHCR_PAT }}
  #
  #      - uses: actions/checkout@v3
  #      - name: Use Node.js
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: "16.x"
  #          cache: yarn
  #
  #      - name: Install project deps
  #        run: yarn
  #
  #      - name: Install dependencies
  #        run: yarn ${{matrix.app}} install
  #
  #      - name: Check existing forms
  #        if: ${{ matrix.app == 'runner' }}
  #        run: yarn runner check-forms
  #
  #      - name: Build dependencies
  #        run: yarn build:dependencies
  #
  #      - name: Lint
  #        run: yarn ${{matrix.app}} lint
  #
  #      - name: Test
  #        run: yarn ${{matrix.app}} test-cov
  #
  #      - name: Upload test results artifacts
  #        uses: actions/upload-artifact@v2
  #        if: ${{ success() || failure() }}
  #        with:
  #          name: test-results-${{matrix.app}}
  #          path: ${{matrix.app}}/test-results
  #          retention-days: 14
  #
  #      - name: Upload test coverage artifacts
  #        uses: actions/upload-artifact@v2
  #        if: ${{ success() || failure() }}
  #        with:
  #          name: test-coverage-${{matrix.app}}
  #          path: ${{matrix.app}}/test-coverage
  #          retention-days: 14

  build-designer:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.hashFile.outputs.tag }}
      hash: ${{ steps.hashFile.outputs.hash }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: yarn

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."ghcr.io"]

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: hashFile
        run: |
          echo "::set-output name=hash::${{hashFiles('designer/Dockerfile')}}"
          echo "::set-output name=tag::ghcr.io/xgovformbuilder/cache-digital-form-builder-designer:${{hashFiles('designer/Dockerfile')}}"

      - name: Build designer
        uses: docker/build-push-action@v3
        with:
          file: designer/Dockerfile
          push: true
          context: .
          tags: ${{ steps.hashFile.outputs.tag }}
          cache-from: type=registry,ref=${{ steps.hashFile.outputs.tag }}
          cache-to: type=registry,ref=${{ steps.hashFile.outputs.tag }},mode=max
          outputs: type=docker,dest=/tmp/designer.tar

  #          cache-from: type=gha
  #          cache-to: type=gha,mode=max

  build-runner:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.hashFile.outputs.tag }}
      hash: ${{ steps.hashFile.outputs.hash }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: yarn

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."ghcr.io"]

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: hashFile
        run: |
          echo "::set-output name=hash::${{hashFiles('runner/Dockerfile')}}"
          echo "::set-output name=tag::ghcr.io/xgovformbuilder/cache-digital-form-builder-designer:${{hashFiles('runner/Dockerfile')}}"

      - name: Build runner
        uses: docker/build-push-action@v3
        with:
          file: runner/Dockerfile
          context: .
          push: true
          tags: ${{ steps.hashFile.outputs.tag }}
          cache-from: type=registry,ref=${{ steps.hashFile.outputs.tag }}
          cache-to: type=registry,ref=${{ steps.hashFile.outputs.tag }},mode=max
          outputs: type=docker,dest=/tmp/runner.tar

  smoke-test:
    runs-on: ubuntu-latest
    needs: [build-runner, build-designer]
    steps:
      - uses: actions/checkout@v3
        with:
          path: app

      #      - run: cp .yarn/cache app/.yarn/cache

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."ghcr.io"]

      - name: Load image
        run: |
          docker pull ${{needs.build-runner.outputs.tag}}
          docker images

      #      - name: load runner
      #        uses: docker/build-push-action@v3
      #        with:
      #          file: app/runner/Dockerfile
      #          context: ./app
      #          load: true
      #          tags: ${{needs.build-runner.outputs.tag}}
      #          cache-from: type=registry,ref=${{needs.build-runner.outputs.tag}}
      #
      #      - name: load runner
      #        run: |
      #          docker pull ${{needs.build-runner.outputs.tag}}
      #          docker tag ${{needs.build-runner.outputs.tag}} digital-form-builder-runner
      #
      #      - name: load designer
      #        run: |
      #          docker pull ${{needs.build-designer.outputs.tag}}
      #          docker tag ${{needs.build-designer.outputs.tag}} digital-form-builder-designer

      - name: check images
        run: |
          docker images

      - name: Check designer container is running
        run: |
          docker compose --project-directory=app up
          docker ps

      - uses: XGovFormBuilder/digital-form-builder-legacy-smoke-tests@main
      - name: Run Lighthouse on urls and validate with lighthouserc
        uses: treosh/lighthouse-ci-action@v8
        with:
          configPath: "./lighthouserc.js"
          uploadArtifacts: true
