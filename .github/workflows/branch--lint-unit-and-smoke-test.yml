name: Branch QA
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "**/README.md"
  workflow_dispatch:
jobs:

  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [designer, runner, model]
    name: lint-and-test-${{matrix.app}}
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: yarn

      - name: Install project deps
        run: yarn

      - name: Install dependencies
        run: yarn ${{matrix.app}} install


      - name: Check existing forms
        if: ${{ matrix.app == 'runner' }}
        run: yarn runner check-forms

      - name: Build dependencies
        run: yarn build:dependencies

      - name: Lint
        run: yarn ${{matrix.app}} lint

      - name: Test
        run: yarn ${{matrix.app}} test-cov

      - name: Upload test results artifacts
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: test-results-${{matrix.app}}
          path: ${{matrix.app}}/test-results
          retention-days: 14

      - name: Upload test coverage artifacts
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: test-coverage-${{matrix.app}}
          path: ${{matrix.app}}/test-coverage
          retention-days: 14

  smoke-test:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."ghcr.io"]


      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}



      - name: Build designer
        uses: docker/build-push-action@v3

        with:
          file: designer/Dockerfile
          tags: ghcr.io/xgovformbuilder/cache-digital-form-builder-designer
          context: "{{defaultContext}}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true

      - name: load designer
        uses: docker/build-push-action@v3
        with:
          file: designer/Dockerfile
          tags: digital-form-builder-designer
          context: "{{defaultContext}}"
          cache-from: type=gha
          load: true

      - name: Build runner
        uses: docker/build-push-action@v3
        with:
          file: runner/Dockerfile
          tags: ghcr.io/xgovformbuilder/cache-digital-form-builder-runner
          context: .
          cache-from: type=gha
          push: true
          cache-to: type=gha,mode=max

      - name: load runner
        uses: docker/build-push-action@v3
        with:
          file: runner/Dockerfile
          tags: digital-form-builder-runner
          context: .
          load: true
          cache-from: type=gha

      - name: check images
        run: |
          docker images

      - name: Check designer container is running
        run: |
          docker compose up -d
          docker ps


      - uses: XGovFormBuilder/digital-form-builder-legacy-smoke-tests@main

      - name: Run Lighthouse on urls and validate with lighthouserc
        uses: treosh/lighthouse-ci-action@v8
        with:
          configPath: "./lighthouserc.js"
          uploadArtifacts: true
