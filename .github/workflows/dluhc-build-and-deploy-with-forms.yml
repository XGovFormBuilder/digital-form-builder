name: Build and deploy forms (manually)

permissions:
  packages: write

on:
  workflow_dispatch:
    inputs:
      environment:
        description:  Which AWS Account to use
        type: choice
        required: true
        options:
        - test
        - uat
        default: test
      copilot:
        description: Whether to deploy to AWS?
        type: boolean
        required: false
        default: false


env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: "runner"
  IMAGE_REPO_PATH: "ghcr.io/${{github.repository_owner}}"

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ steps.metadata.outputs.tags}}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true
          file: ./fsd_config/Dockerfile
          build-args: |
            COMMIT_SHA=:${{ github.sha }}

  deploy-and-test-dev:
    if: ${{ !github.event.inputs.copilot }}
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Deploy to Gov PaaS Dev
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api: ${{secrets.CF_API}}
          cf_org: ${{secrets.CF_ORG}}
          cf_space: ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USERNAME}}
          cf_password: ${{secrets.CF_PASSWORD}}
          # env vars required in the manifest must be declared here
          command: push funding-service-design-form-runner-dev --docker-image ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}:sha-${{ github.sha }} -f ./fsd_config/manifest.yml --var RSA256_PUBLIC_KEY_BASE64="${{secrets.RSA256_PUBLIC_KEY_BASE64}}"

      # - name: Set up Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.10.x
      # - name: install dependencies
      #   run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
      # - name: build static assets
      #   run: python build.py
      # - name: Install Chromium
      #   uses: browser-actions/setup-chrome@latest
      # Restore once domains are put back (no basic auth)
      # - name: Zap Baseline Scan
      #   uses: zaproxy/action-baseline@v0.6.1
      #   with:
      #     target: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.dev.gids.dev
      #     allow_issue_writing: False

      # - name: ZAP Full Scan
      #   uses: zaproxy/action-full-scan@v0.3.0
      #   with:
      #     target: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.dev.gids.dev
      #     allow_issue_writing: False

  run-shared-tests_dev:
    needs: deploy-and-test-dev
    if: ${{ github.actor != 'dependabot[bot]'}} && ${{ !github.event.inputs.copilot }}
    uses: communitiesuk/funding-design-service-workflows/.github/workflows/run-shared-tests.yml@main
    with:
      perf_test_target_url_application_store: https://funding-service-design-application-store-dev.london.cloudapps.digital
      perf_test_target_url_fund_store: https://funding-service-design-fund-store-dev.london.cloudapps.digital
      perf_test_target_url_assessment_store: https://funding-service-design-assessment-store-dev.london.cloudapps.digital
      e2e_tests_target_url_frontend: https://fsd:fsd@frontend.dev.gids.dev
      e2e_tests_target_url_authenticator: https://fsd:fsd@authenticator2.dev.gids.dev
      e2e_tests_target_url_form_runner: https://fsd:fsd@forms.dev.gids.dev
      e2e_tests_target_url_assessment: https://fsd:fsd@assessment.dev.gids.dev
      run_performance_tests: true
      run_e2e_tests: false
    secrets:
      E2E_PAT: ${{secrets.E2E_PAT}}

  deploy-to-test:
    needs: deploy-and-test-dev
    if: github.ref == 'refs/heads/main' && ${{ !github.event.inputs.copilot }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Deploy to Gov PaaS Test
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api: ${{secrets.CF_API}}
          cf_org: ${{secrets.CF_ORG}}
          cf_space: ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USERNAME}}
          cf_password: ${{secrets.CF_PASSWORD}}
          # env vars required in the manifest must be declared here
          command: push funding-service-design-form-runner-test --docker-image ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}:sha-${{ github.sha }} -f ./fsd_config/manifest.yml --var RSA256_PUBLIC_KEY_BASE64="${{secrets.RSA256_PUBLIC_KEY_BASE64}}"

  run-shared-tests_test:
    needs: deploy-to-test
    if: ${{ github.actor != 'dependabot[bot]' }} && ${{ !github.event.inputs.copilot }}
    uses: communitiesuk/funding-design-service-workflows/.github/workflows/run-shared-tests.yml@main
    with:
      perf_test_target_url_application_store: https://funding-service-design-application-store-test.london.cloudapps.digital
      perf_test_target_url_fund_store: https://funding-service-design-fund-store-test.london.cloudapps.digital
      perf_test_target_url_assessment_store: https://funding-service-design-assessment-store-test.london.cloudapps.digital
      e2e_tests_target_url_frontend: https://fsd:fsd@frontend.test.gids.dev
      e2e_tests_target_url_authenticator: https://fsd:fsd@authenticator2.test.gids.dev
      e2e_tests_target_url_form_runner: https://fsd:fsd@forms.test.gids.dev
      e2e_tests_target_url_assessment: https://fsd:fsd@assessment.test.gids.dev
      run_performance_tests: true
      run_e2e_tests: true
    secrets:
      E2E_PAT: ${{secrets.E2E_PAT}}

  deploy-aws:
    if: ${{ github.event.inputs.copilot }}
    needs: docker-build
    concurrency: deploy-${{ inputs.environment || 'test' }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'test' }}
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v3

    - name: Get current date
      id: currentdatetime
      run: echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubCopilotDeploy
        role-session-name: FORMS_COPILOT_${{ steps.currentdatetime.outputs.datetime }}
        aws-region: eu-west-2

    - name: Install AWS Copilot CLI
      run: |
        curl -Lo aws-copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x aws-copilot && sudo mv aws-copilot /usr/local/bin/copilot

    - name: Inject Git SHA into manifest
      run: |
        yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-forms/manifest.yml

    - name: Inject replacement image into manifest
      run: |
        yq -i '.image.location = "${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}:sha-${{ github.sha }}"'  copilot/fsd-forms/manifest.yml

#    - name: Run database migrations
#      run: scripts/migration-task-script.py ${{ inputs.environment || 'test' }}

    - name: Copilot deploy
      run: |
        copilot deploy --env ${{ inputs.environment || 'test' }}
