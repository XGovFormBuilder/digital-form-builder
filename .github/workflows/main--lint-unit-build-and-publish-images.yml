name: Main QA
on:
  push:
    branches:
      - main
jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          branches: main

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true

  assign-semver:
    runs-on: ubuntu-latest
    needs: [calculate-version]
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      MAJOR: ${{ needs.calculate-version.outputs.Major }}
    outputs:
      SEMVER: ${{ steps.calc-semver.outputs.semver }}
    steps:
      - run: echo $SEMVER
      - name: Add 3 to calculated semver
        run: |
          echo SEMVER="$((3 + MAJOR))${SEMVER:1}" >> $GITHUB_ENV
      - name: Set semver to output
        id: calc-semver
        run: echo "::set-output name=semver::$(echo $SEMVER)"

  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [designer, runner, model]
    name: lint-and-test-${{matrix.app}}
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: yarn

      - name: Install project deps
        run: yarn

      - name: Install dependencies
        run: yarn ${{matrix.app}} install

      - name: Check existing forms
        if: ${{ matrix.app == 'runner' }}
        run: yarn runner check-forms

      - name: Build dependencies
        run: yarn build:dependencies

      - name: Lint
        run: yarn ${{matrix.app}} lint

      - name: Test
        run: yarn ${{matrix.app}} test-cov

      - name: Upload test results artifacts
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: test-results-${{matrix.app}}
          path: ${{matrix.app}}/test-results
          retention-days: 14

      - name: Upload test coverage artifacts
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: test-coverage-${{matrix.app}}
          path: ${{matrix.app}}/test-coverage
          retention-days: 14

  build-and-publish-images:
    runs-on: ubuntu-latest
    needs: [calculate-version, assign-semver, lint-and-test]
    env:
      SEMVER: ${{ needs.assign-semver.outputs.SEMVER }}
    strategy:
      matrix:
        app: [designer, runner]
    name: build-and-publish-${{matrix.app}}-image

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: yarn

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."ghcr.io"]

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{matrix.app}} and push
        uses: docker/build-push-action@v3
        with:
          file: ${{matrix.app}}/Dockerfile
          push: true
          context: .
          tags:
            ghcr.io/xgovformbuilder/digital-form-builder-${{matrix.app}}:${{ env.SEMVER }}
            ghcr.io/xgovformbuilder/digital-form-builder-${{matrix.app}}:latest
          cache-from: type=registry,ref=ghcr.io/xgovformbuilder/cache-digital-form-builder-${{matrix.app}}:${{ env.SEMVER }}
          cache-to: type=registry,ref=ghcr.io/xgovformbuilder/cache-digital-form-builder-${{matrix.app}}:${{ env.SEMVER }},mode=max
          build-args: LAST_TAG_GH=${{env.SEMVER}}

      - name: Trigger deploy development environment
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy Development Environment
          token: ${{ secrets.GHCR_PAT }}
          inputs: '{ "app": "${{ matrix.app }}", "tag": "${{ env.SEMVER }}"}'

  tag-branch:
    runs-on: ubuntu-latest
    needs: [calculate-version, assign-semver, build-and-publish-images]
    env:
      SEMVER: ${{ needs.assign-semver.outputs.SEMVER }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GHCR_PAT }}
      - name: Tag branch with run number
        run: |
          git tag ${{ env.SEMVER }}
          git push --tags origin HEAD
