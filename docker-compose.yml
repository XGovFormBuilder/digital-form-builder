# This file only contains base configuration needed for CI build and test
# For local development environment please see docker-compose.dev.yml
version: "3.9"
services:
  designer:
    container_name: designer
    image: digital-form-builder-designer
    build:
      context: .
      dockerfile: ./designer/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=123abc
      - sandbox=true
      - PREVIEW_URL=http://localhost:3009
      - PUBLISH_URL=http://runner:3009
      - LAST_COMMIT
      - LAST_TAG
    command: yarn designer start
    depends_on:
      - runner
  runner:
    container_name: runner
    image: digital-form-builder-runner
    build:
      context: .
      dockerfile: ./runner/Dockerfile
    ports:
      - "3009:3009"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=123abc
      - sandbox=true
      - PREVIEW_MODE=true
      - LAST_COMMIT
      - LAST_TAG
      - MAGIC_LINK_TOGGLE="false"
      - ENFORCE_CSRF=true
    #      - ENABLE_QUEUE_SERVICE=true
    #      - QUEUE_DATABASE_URL=mysql://root:root@mysql:3306/queue # or postgres://user:root@postgres:5432/queue
    #      - DEBUG="prisma*"
    #      - QUEUE_TYPE="MYSQL"
    command: yarn runner start
    depends_on:
      redis:
        condition: service_started
  #      mysql:
  #        condition: service_healthy
  redis:
    image: "redis:alpine"
    command: redis-server --requirepass 123abc
    ports:
      - "6379:6379"
#  if using MYSQL, uncomment submitter
#  submitter:
#    image: digital-form-builder-submitter
#    build:
#      context: .
#      dockerfile: ./submitter/Dockerfile
#    ports:
#      - "9000:9000"
#    environment:
#      - PORT=9000
#      - QUEUE_DATABASE_URL=mysql://root:root@mysql:3306/queue
#      - QUEUE_POLLING_INTERVAL=5000
#      - DEBUG="prisma*"
#    command: yarn submitter start
#    depends_on:
#      mysql:
#        condition: service_healthy
#  mysql:
#    container_name: mysql
#    image: "mysql:latest"
#    command: --default-authentication-plugin=mysql_native_password
#    ports:
#      - "3306:3306"
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: queue
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      timeout: 20s
#      retries: 10

# use psql if you want a PostgreSQL based queue (recommended)
#  postgres:
#    container_name: postgres
#    image: "postgres:16"
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_DB: queue
#      POSTGRES_PASSWORD: root
#      POSTGRES_USER: user
